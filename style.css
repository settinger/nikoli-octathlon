* {
  margin: 0;
  box-sizing: border-box;
  font-family: sans-serif;
}

body {
  margin: 20px;
}

#container {
  display: grid;
  grid-gap: 3%;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(6, 1fr);
  grid-auto-rows: minmax(200px, auto);
  text-align: center;
  padding: 4%;
  padding-bottom: 40px;
  min-width: 800px;
  max-width: 140vh;
  min-height: 200px;
  margin: 0 auto;
}

#inputMethodsTop {
  grid-column: 1;
  grid-row: 1;
  grid-column-end: span 2;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}

#inputMethodsBottom {
  grid-column: 1;
  grid-column-end: span 4;
  grid-row: 5;
  height: 100px;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
}

#rules {
  display: block;
}

.title {
  grid-column-start: 1;
  grid-column-end: 3;
  grid-row: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

p {
  padding: 10px 0;
}

ul {
  text-align: left;
  display: inline-block;
}

#indicator {
  padding: 2em;
}

#arrows {
  pointer-events: none;
}

button {
  user-select: none;
}

/* The grid cell that holds the puzzle name, description, and puzzle grid */
.puzzle {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.puzzleName {
  user-select: none;
}

.rules {
  user-select: none;
  font-size: 0.7em;
}

/* Default styling for cells and things inside the grid */
.cell {
  pointer-events: bounding-box;
  fill: none;
}

.cell:not(.shaded):not(.unshaded) {
  fill: #dddddd;
}

.cell.shaded {
  fill: black;
}

.cell.unshaded {
  fill: white;
}

.cell circle {
  fill: none;
  stroke: none;
  r: 0;
}

text {
  pointer-events: none;
  user-select: none;
}

.clue text {
  fill: black;
}

.clue.shaded text {
  fill: white;
}

.clue.false text {
  fill: none;
  stroke: black;
  stroke-width: 0.1;
}

.shaded.clue.false text {
  stroke: white;
}

.clue.true circle {
  fill: none;
  stroke: black;
  stroke-width: 1;
  r: 4;
}

.clue.true.shaded circle {
  stroke: white;
}

.grid,
.walls,
.bridges,
.loops,
.edges,
.crosses,
circle,
text {
  pointer-events: none;
}

.highlight {
  r: 0;
  pointer-events: none;
}

/* Akari-specific styling */
.akari .illuminated {
  fill: greenyellow;
}

.akari .shaded {
  fill: black;
}

.akari .unshaded:not(.illuminated) {
  fill: white;
}

.akari .lamp circle {
  r: 4;
  fill: green;
  stroke: none;
}

.akari .marked circle {
  r: 0.8;
  fill: green;
  stroke: none;
}

/* Corral specific styling */
.corral rect {
  fill: white;
}

.corral .shaded rect {
  fill: greenyellow;
}

.corral .unshaded rect {
  fill: yellow;
}

.corral .clue.shaded text {
  fill: black;
}

.corral .grid {
  stroke-dasharray: 1;
}

/* Country Road specific styling */
.countryroad rect {
  fill: white;
}

/* Fillomino specific styling */
.fillomino rect {
  fill: white;
}

/*Heyawake specific styling */
.heyawake .cell.shaded {
  fill: green;
}

.heyawake .cell.unshaded {
  fill: greenyellow;
}

.heyawake .cell:not(.shaded):not(.unshaded) {
  fill: white;
}

/* Kurodoko and Nurikabe specific styling */

.kurodoko .clue circle,
.nurikabe .clue circle {
  stroke: black;
  fill: none;
  stroke-width: 1;
  r: 4.5;
}

.kurodoko .unshaded:not(.clue) circle,
.nurikabe .unshaded:not(.clue) circle {
  stroke: none;
  fill: black;
  r: 0.8;
}

.kurodoko :not(.shaded) rect,
.nurikabe :not(.shaded) rect {
  fill: white;
}

.kurodoko .shaded rect,
.nurikabe .shaded rect {
  fill: black;
}

/* Masyu specific styling */
.masyu .pearl circle {
  stroke: black;
  fill: white;
  r: 4;
}

.masyu .pearl.black circle {
  fill: black;
}

.masyu .pearl.black text {
  fill: white;
}

.masyu .pearl.white text {
  fill: black;
}

.masyu .false.pearl circle {
  filter: opacity(50%);
}

/* Shikaku specific styling */
.shikaku rect {
  fill: white;
}

/* Slitherlink specific styling */
.slitherlink.grid circle {
  r: 0.8;
  fill: black;
  shape-rendering: geometricPrecision;
}

.slitherlink .cell rect {
  fill: white;
}
